# Lista de los contenedores que componen tu aplicación
adminApp:
    name: aims-mobile-admin # Nombre del primer contenedor (ej. el frontend o API principal)
    replicas: 1 # Podemos tener más réplicas para el servicio público
    image: quay.io/microsafe_app_ban/aims-mobile-admin-private@sha256:891922a082d403bc9b16d4bce34cbd715247069de41577cf40c6db2d7962372e
    resources:
      requests:
        cpu: 100m
        memory: 128Mi
      limits:
        cpu: 200m
        memory: 256Mi
    config:
      NODE_ENV: "production"
      VITE_VERSION: "1.0.0"
      ##Conexión con backend
      VITE_EXPRESS_PROTOCOL: "http"
      VITE_EXPRESS_HOST: "aims-mobile-service"
      VITE_EXPRESS_PORT: "8080" # Puerto del servicio web
      VITE_KEYCLOAK_URL: "rhbk-aims.prod.url"
      VITE_KEYCLOAK_REALM: "rhbk-aims.prod.realm"
      VITE_KEYCLOAK_CLIENT_ID: "rhbk-aims.prod.id"
    secretName: aims-mobile-admin-secrets
    # Configuración del servicio interno
    service:
      enabled: true
      port: 8083 # Puerto por el que el servicio escuchará
      targetPort: 8080 # Puerto en el que tu contenedor escucha
    # Configuración de la ruta externa (Ingress/Route)
    ingress:
      enabled: true
      # Cambia a 'true' si estás en OpenShift para usar un objeto Route
      isOpenshiftRoute: true
      #host: "api.tu-dominio-publico.com" # El dominio público
    autoscaling:
      enabled: false
###########################################################################
mainService:
    name: aims-mobile-service
    replicas: 2
    # Configuración no sensible
    annotations:
      instrumentation.opentelemetry.io/inject-nodejs: "true"
    config:
      NODE_ENV: "production"
      EXPRESS_PORT: "4000"
      # Conexión con consola web de administración
      FRONTEND_PROTOCOL: "http"
      FRONTEND_IP: "aims-mobile-admin"
      FRONTEND_PORT: "80" # Opcional
      # Base de datos SQL Server 2022
      MSSQL_HOST: "mssql-database.prod.host"
      MSSQL_PORT: "mssql-database.prod.port"
      # API AIMSv1
      AIMS1_API_URL: "http://aims-db-service:3000"
      # API Remedy
      REMEDY_API_URL: "remedy-aims.prod.svc"
      REMEDY_USER: "RMDYUSR"
      ## Open Telemetry
      OTLP_METRIC_EXPORTER_URL: "opentelemetry-metrics.prod.url"
      OTLP_TRACE_EXPORTER_URL: "opentelemetry-traces.prod.url"
      OTLP_LOG_EXPORTER_URL: "opentelemetry-logs.prod.url"
      KEYCLOAK_URL: "rhbk-aims.prod.url"
      KEYCLOAK_REALM: "rhbk-aims.prod.realm"
      KEYCLOAK_CLIENT_ID: "rhbk-aims.prod.id"
      FRONTEND_VERSION: "1.0.0"
      FRONTEND_EXPRESS_HOST: "aims-mobile-admin"
      FRONTEND_EXPRESS_PROTOCOL: "http"
      FRONTEND_EXPRESS_PORT: "4000" # Opcional
      FRONTEND_KEYCLOAK_URL: "rhbk-aims.prod.url"
      FRONTEND_KEYCLOAK_REALM: "rhbk-aims.prod.realm"
      FRONTEND_KEYCLOAK_CLIENT_ID: "rhbk-aims.prod.id"
      # Secretos y contraseñas
    secretName: aims-mobile-service-secrets
    # Configuración del servicio interno
    service:
      enabled: true
      port: 8085 # Puerto por el que el servicio escuchará
      targetPort: 8081 # Puerto en el que tu contenedor escucha
    # Configuración de la ruta externa (Ingress/Route)
    ingress:
      enabled: true
      isOpenshiftRoute: true
      #host: "api.tu-dominio-publico.com" # El dominio público
    # Configuración de auto-escalado PARA ESTE SERVICIO
    autoscaling:
      enabled: true
      minReplicas: 1
      maxReplicas: 2
      targetCPUUtilizationPercentage: 80
      #targetMemoryUtilizationPercentage: 80 # También puedes usar memoria
    # Contenedor principal de la aplicación
###########################################################################
    serviceContainer:
      name: aims-mobile-service-main
      image: quay.io/microsafe_app_ban/aims-mobile-service-private@sha256:fb33a2d1eb54712ad74ecd2218ec660742ea1985ed9aea009afdc330a816691f
      resources:
        requests: { cpu: 200m, memory: 128Mi }
        limits: { cpu: 2500m, memory: 2048Mi }
###########################################################################
    proxyContainer:
      name: aims-mobile-service-proxy
      image: quay.io/microsafe_app_ban/aims-mobile-proxy-private@sha256:6094e2e512d7851559ddbf082617bc5b71a4f1ca27dda4c27f6ae69b062307eb
      resources:
        requests: { cpu: 200m, memory: 128Mi }
        limits: { cpu: 2000m, memory: 1024Mi }
###########################################################################
dbService:
    name: aims-db-service
    replicas: 1
    image: quay.io/microsafe_app_ban/aims-mobile-access-private@sha256:ce5a1d07b5a56842e4387231639df08d16868148b591e28fca266bbc78ce142c
    resources:
      requests:
        cpu: 200m
        memory: 128Mi
      limits:
        cpu: 300m
        memory: 256Mi
    config:
      # Base de datos SQL Server 2022
      MSSQL_HOST: "mssql-database.prod.host"
      MSSQL_PORT: "mssql-database.prod.port"
    secretName: aims-db-service-secrets
    autoscaling:
      enabled: false
    service:
      enabled: true
      port: 3000 # Puerto por el que el servicio escuchará
      targetPort: 3000 # Puerto en el que tu contenedor escucha
    ingress:
      enabled: false
serviceAccount:
  # Al poner 'false', la plantilla no generará nada, pero la variable existirá.
  create: false
  annotations: {}
  # El nombre se puede dejar vacío si create es false.
  name: ""
