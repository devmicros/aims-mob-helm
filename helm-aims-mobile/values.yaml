# Lista de los contenedores que componen tu aplicación
containers:
  - name: aims-mob-admin # Nombre del primer contenedor (ej. el frontend o API principal)
    replicas: 1 # Podemos tener más réplicas para el servicio público
    image:
      repository: quay.io/microsafe_app_ban/aims-mob-admin
      tag: "0.1"
    config:
      NODE_ENV: "production"
      VITE_VERSION: "1.0.0"
      ## Conexión con backend
      VITE_EXPRESS_PROTOCOL: "http"
      VITE_EXPRESS_HOST: "aims-mob-service"
      VITE_EXPRESS_PORT: "8080" # Puerto del servicio web
      VITE_KEYCLOAK_URL: "https://ap01107-rhbk.apps.qa-1.gcp-ocp.banorte.com"
      VITE_KEYCLOAK_REALM: "reino_chapas_randomicas_qa"
      VITE_KEYCLOAK_CLIENT_ID: "cliente_chapas_randomicas_qa"
    secrets:
      ## Encriptación de credenciales de usuarios de servicio
      VITE_SECRET_KEY: "Microsafe01"
      VITE_AIMS1_SECRET_KEY: "894d95b40108dd625a027e579267048b"
    # Configuración del servicio interno
    service:
      enabled: true
      port: 8083 # Puerto por el que el servicio escuchará
      targetPort: 8081 # Puerto en el que tu contenedor escucha
    # Configuración de la ruta externa (Ingress/Route)
    ingress:
      enabled: true
      # Cambia a 'true' si estás en OpenShift para usar un objeto Route
      isOpenshiftRoute: true
      #host: "api.tu-dominio-publico.com" # El dominio público
    autoscaling:
      enabled: false

  - name: aims-mob-service # Nombre del segundo contenedor (ej. un microservicio)
    replicas: 2 # Podemos tener más réplicas para el servicio público
    # Configuración no sensible
    config:
      NODE_ENV: "production"
      EXPRESS_PORT: "4000"
      # Conexión con consola web de administración
      FRONTEND_PROTOCOL: "http"
      FRONTEND_IP: "aims-mob-admin"
      FRONTEND_PORT: "80" # Opcional
      # Base de datos SQL Server 2022
      MSSQL_HOST: "15.128.107.213"
      MSSQL_PORT: "1450"
      # API AIMSv1
      AIMS1_API_URL: "http://aims-db-service:3000"
      # API Remedy
      REMEDY_API_URL: "https://15.128.69.239/arsys/WSDL/public/f5lbremedyatmwsq"
      REMEDY_USER: "MAC_CHAPAS"
      ## Open Telemetry
      OTLP_METRIC_EXPORTER_URL: "http://localhost:4001/metrics"
      OTLP_TRACE_EXPORTER_URL: "http://localhost:4001/traces"
      OTLP_LOG_EXPORTER_URL: "http://localhost:4001/logs"
      KEYCLOAK_URL: "https://ap01107-rhbk.apps.qa-1.gcp-ocp.banorte.com"
      KEYCLOAK_REALM: "reino_chapas_randomicas_qa"
      KEYCLOAK_CLIENT_ID: "cliente_chapas_randomicas_qa"
      FRONTEND_VERSION: "1.0.0"
      FRONTEND_EXPRESS_HOST: "aims-mob-admin"
      FRONTEND_EXPRESS_PROTOCOL: "http"
      FRONTEND_EXPRESS_PORT: "4000" # Opcional
      FRONTEND_KEYCLOAK_URL: "https://ap01107-rhbk.apps.qa-1.gcp-ocp.banorte.com"
      FRONTEND_KEYCLOAK_REALM: "reino_chapas_randomicas_qa"
      FRONTEND_KEYCLOAK_CLIENT_ID: "cliente_chapas_randomicas_qa"
      # Secretos y contraseñas
    secrets:
      # Encriptación de credenciales de usuarios de consola: ""
      SECRET_KEY: "Microsafe01"
      SECRET_IV: "Microsafe02"
      MSSQL_USER: "UGAIMS"
      MSSQL_DATABASE_NAME: "AimsMobile"
      MSSQL_PASS: "Redertyu#6543"
      ## Encriptación de comunicación con app
      JWT_SECRET: "0IIZx3pGRLZ5k1wsk5SPXC1SY665azcy"
      CRYPTO_IV: "065c915c0dc9465052c3235c3139dfc7"
      CRYPTO_SALT: "9Uk1cojCpqh8qmdkHXQj8VyVo94M2khfx5sbk6jT1yrRWj3DI0IIOe6ZIKLnXPKo"
      CRYPTO_SECRET: "mYwdpdEqREcdM9WN99YoqzFXNO0FXz6HmBiPef3dpHnPT7C6cUYWJa5KoDsh97T0"
      # Inyección de datos
      USER_PASSWORD: "Banort3$" # default password for console users
      # API AIMSv1
      AIMS1_SECRET_KEY: "894d95b40108dd625a027e579267048b"
      # API Remedy
      REMEDY_PASSWORD: "123"
      FRONTEND_SECRET_KEY: "Microsafe01"
      FRONTEND_AIMS1_SECRET_KEY: "894d95b40108dd625a027e579267048b"
    # Configuración del servicio interno
    service:
      enabled: true
      port: 8085 # Puerto por el que el servicio escuchará
      targetPort: 8080 # Puerto en el que tu contenedor escucha
    # Configuración de la ruta externa (Ingress/Route)
    ingress:
      enabled: true
      # Cambia a 'true' si estás en OpenShift para usar un objeto Route
      isOpenshiftRoute: true
      #host: "api.tu-dominio-publico.com" # El dominio público
    # Configuración de auto-escalado PARA ESTE SERVICIO
    autoscaling:
      enabled: true
      minReplicas: 2
      maxReplicas: 10
      targetCPUUtilizationPercentage: 80
      #targetMemoryUtilizationPercentage: 80 # También puedes usar memoria
    # Contenedor principal de la aplicación
    appContainer:
      name: aims-mob-service-app
      image:
        repository: quay.io/microsafe_app_ban/aims-mob-service
        tag: "0.1"
    # Contenedor Sidecar para el proxy
    proxyContainer:
      name: aims-mob-service-proxy
      image:
        repository: quay.io/microsafe_app_ban/aims-mob-proxy
        tag: "0.1"

  - name: aims-db-service # Nombre del tercer contenedor (ej. la base de datos)
    replicas: 1 # Podemos tener más réplicas para el servicio público
    image:
      repository: quay.io/microsafe_app_ban/aims-db-service
      tag: "0.1"
    config:
      # Base de datos SQL Server 2022
      MSSQL_HOST: "15.128.107.213"
      MSSQL_PORT: "1450"
    secrets:
      # Base de datos SQL Server 2022
      MSSQL_USER: "UGAIMS"
      MSSQL_DATABASE_NAME: "Aims"
      MSSQL_PASS: "Redertyu#6543"
    autoscaling:
      enabled: false
    service:
      enabled: true
      port: 3000 # Puerto por el que el servicio escuchará
      targetPort: 3000 # Puerto en el que tu contenedor escucha
    ingress:
      enabled: false
serviceAccount:
  # Al poner 'false', la plantilla no generará nada, pero la variable existirá.
  create: false
  annotations: {}
  # El nombre se puede dejar vacío si create es false.
  name: ""
