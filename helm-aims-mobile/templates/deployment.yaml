# templates/deployment.yaml
{{- range .Values.containers }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  # El nombre del Deployment es específico del contenedor
  name: {{ .name }}
spec:
  replicas: {{ .replicas | default 1 }}
  selector:
    matchLabels:
      app: {{ .name }}
  template:
    metadata:
      labels:
        app: {{ .name }}
    spec:
      containers:
        # Si este servicio tiene un proxyContainer definido en values.yaml...
        {{- if .proxyContainer }}

        # ...entonces crea el contenedor de la aplicación principal.
        - name: {{ .appContainer.name }}
          image: "{{ .appContainer.image.repository }}:{{ .appContainer.image.tag }}"
          # Las variables de entorno se aplican a la app, no al proxy.
          envFrom:
            - configMapRef:
                name: {{ .name }}-config
            {{- if .secrets }}
            - secretRef:
                name: {{ .name }}-secrets
            {{- end }}
        
        # ...y también crea el contenedor del proxy sidecar.
        - name: {{ .proxyContainer.name }}
          image: "{{ .proxyContainer.image.repository }}:{{ .proxyContainer.image.tag }}"
          ports:
            # El puerto expuesto del Pod será el del proxy.
            - containerPort: 8080

        # Si no tiene un proxyContainer definido...
        {{- else }}

        # ...entonces crea un único contenedor, como antes.
        - name: {{ .name }}
          image: "{{ .image.repository }}:{{ .image.tag }}"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: {{ .service.targetPort }}
          envFrom:
            - configMapRef:
                name: {{ .name }}-config
            {{- if .secrets }}
            - secretRef:
                name: {{ .name }}-secrets
            {{- end }}
        {{- end }}
{{- end }}
